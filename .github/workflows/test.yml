on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest
    name: Setup
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up git config
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions"
    
  test-different-versions:
    runs-on: ubuntu-latest
    name: It reads versions from normal git tags and CHANGELOG
    needs: setup
    steps:
      - run: touch CHANGELOG.md
      - name: Create a simple changelog file
        uses: cucumber-actions/changelog-action@v1.3
        with:
          args: init --output CHANGELOG.md --compare-url https://example.com/abcdef...HEAD
      - name: Create an initial commit
        run: |
          git commit -am "Add a changelog"
          git tag v0.0.0
      - name: Run changelog release
        uses: cucumber-actions/changelog-action@v1.3
        with:
          args: release --output CHANGELOG.md 1.0.0
      - name: Commit release
        run: |
          git commit -am "Release v1.0.0"
      - name: Test the action
        uses: ./
        id: versions
      - name: Assert values
        run: |
          git tag -l
          [ "${{ steps.versions.outputs.released-version }}" == "0.0.0" ]
          [ "${{ steps.versions.outputs.changelog-latest-version }}" == "1.0.0" ]
          [ "${{ steps.versions.outputs.is-release-required }}" == "true" ]

  test-same-version:
    runs-on: ubuntu-latest
    name: is-release-required should be false when versions are the same
    needs: setup
    steps:
      - run: touch CHANGELOG.md
      - name: Create a simple changelog file
        uses: cucumber-actions/changelog-action@v1.3
        with:
          args: init --output CHANGELOG.md --compare-url https://example.com/abcdef...HEAD
      - name: Create an initial commit
        run: |
          git commit -am "Add a changelog"
      - name: Run changelog release
        uses: cucumber-actions/changelog-action@v1.3
        with:
          args: release --output CHANGELOG.md 1.0.0
      - name: Commit release
        run: |
          git commit -am "Release v1.0.0"
          git tag v1.0.0
      - name: Test the action
        uses: ./
        id: versions
      - name: Assert values
        run: |
          git tag -l
          [ !"${{ steps.versions.outputs.is-release-required }}" ]
